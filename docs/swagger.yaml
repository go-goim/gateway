basePath: /gateway/v1
definitions:
  dto.BaseFriendRequest:
    properties:
      friendUid:
        example: av8FMdRdcb
        type: string
    required:
    - friendUid
    type: object
  dto.ChangeGroupMemberRequest:
    properties:
      gid:
        example: av8FMdRdcb
        type: string
      uids:
        example:
        - av8FMdRdcb
        - av8FMdRdcc
        items:
          type: string
        maxItems: 20
        minItems: 1
        type: array
    required:
    - gid
    - uids
    type: object
  dto.ChangeGroupMemberResponse:
    properties:
      count:
        example: 1
        type: integer
    type: object
  dto.ConfirmFriendRequestRequest:
    properties:
      friendRequestId:
        example: 2
        type: integer
    required:
    - friendRequestId
    type: object
  dto.CreateGroupRequest:
    properties:
      avatar:
        example: https://example.com/avatar.png
        type: string
      desc:
        example: test
        maxLength: 128
        type: string
      members:
        example:
        - av8FMdRdcb
        - av8FMdRdcc
        items:
          type: string
        maxItems: 20
        minItems: 2
        type: array
      name:
        example: test
        maxLength: 32
        type: string
    required:
    - members
    - name
    type: object
  dto.CreateUserRequest:
    properties:
      email:
        description: Email and Phone only one can be set
        example: user1@example.com
        type: string
      name:
        example: user1
        maxLength: 32
        minLength: 2
        type: string
      password:
        example: "123456"
        maxLength: 20
        minLength: 6
        type: string
      phone:
        example: "13800138000"
        type: string
    required:
    - name
    - password
    type: object
  dto.DeleteGroupRequest:
    properties:
      gid:
        example: av8FMdRdcb
        type: string
    required:
    - gid
    type: object
  dto.Friend:
    properties:
      createdAt:
        example: 1579098983
        type: integer
      friendAvatar:
        example: https://www.example.com/friendAvatar.png
        type: string
      friendName:
        example: friendName
        type: string
      friendUid:
        example: av8FMdRdcb
        type: string
      status:
        description: '0: friend, 1: stranger, 2: blacklist'
        example: 0
        type: integer
      uid:
        example: av8FMdRdcb
        type: string
      updatedAt:
        example: 1579098983
        type: integer
    type: object
  dto.FriendRequest:
    properties:
      createdAt:
        example: 1579098983
        type: integer
      friendAvatar:
        example: https://www.example.com/friendAvatar.png
        type: string
      friendName:
        example: friendName
        type: string
      friendUid:
        example: av8FMdRdcb
        type: string
      id:
        example: 1
        type: integer
      status:
        description: '0: pending, 1: accepted, 2: rejected'
        example: 0
        type: integer
      uid:
        example: av8FMdRdcb
        type: string
      updatedAt:
        example: 1579098983
        type: integer
    type: object
  dto.Group:
    properties:
      avatar:
        example: https://example.com/avatar.png
        type: string
      desc:
        example: test
        type: string
      gid:
        example: av8FMdRdcb
        type: string
      max_member:
        example: 20
        type: integer
      member_count:
        example: 2
        type: integer
      members:
        items:
          $ref: '#/definitions/dto.GroupMember'
        type: array
      name:
        example: test
        type: string
      owner:
        $ref: '#/definitions/dto.GroupMember'
      owner_uid:
        example: av8FMdRdcb
        type: string
      status:
        example: 1
        type: integer
    type: object
  dto.GroupMember:
    properties:
      gid:
        example: av8FMdRdcb
        type: string
      status:
        description: '0: normal, 1: silent'
        example: 1
        type: integer
      type:
        description: '0: owner, 1: member'
        example: 1
        type: integer
      uid:
        example: av8FMdRdcb
        type: string
      user:
        $ref: '#/definitions/dto.User'
        description: only when withMembers is true and withInfo is true
    type: object
  dto.Message:
    properties:
      content:
        example: hello
        type: string
      contentType:
        example: 1
        type: integer
      createTime:
        example: 1579098983
        type: integer
      from:
        example: av8FMdRdcb
        type: string
      messageId:
        example: 1
        type: integer
      sessionId:
        example: "1"
        type: string
      sessionType:
        example: 1
        type: integer
      to:
        example: av8FMdRdcb
        type: string
    type: object
  dto.SendMessageReq:
    properties:
      content:
        example: hello
        type: string
      contentType:
        example: 1
        type: integer
      from:
        example: av8FMdRdcb
        type: string
      sessionId:
        example: "1"
        type: string
      sessionType:
        example: 1
        type: integer
      to:
        example: av8FMdRdcb
        type: string
    required:
    - content
    - contentType
    - from
    - sessionId
    - sessionType
    - to
    type: object
  dto.SendMessageResp:
    properties:
      messageId:
        example: 1
        type: integer
      sessionId:
        example: abc
        type: string
    type: object
  dto.UpdateGroupRequest:
    properties:
      avatar:
        example: https://www.example.com/avatar.png
        type: string
      desc:
        example: test
        maxLength: 128
        type: string
      gid:
        example: av8FMdRdcb
        type: string
      name:
        example: test
        maxLength: 32
        type: string
    required:
    - gid
    type: object
  dto.UpdateUserRequest:
    properties:
      avatar:
        example: https://www.example.com/avatar.png
        type: string
      email:
        example: user1@example.com
        type: string
      name:
        example: user1
        maxLength: 32
        minLength: 2
        type: string
      password:
        example: "123456"
        maxLength: 20
        minLength: 6
        type: string
      phone:
        example: "13800138000"
        type: string
    type: object
  dto.User:
    properties:
      avatar:
        example: https://www.example.com/avatar.png
        type: string
      connectUrl:
        example: ws://10.0.0.1:8080/ws
        type: string
      email:
        example: abc@example.com
        type: string
      loginStatus:
        example: 0
        type: integer
      name:
        example: user1
        type: string
      phone:
        example: "13800138000"
        type: string
      uid:
        example: av8FMdRdcb
        type: string
    type: object
  dto.UserLoginRequest:
    properties:
      email:
        description: Email and Phone only one can be set
        example: user1@example.com
        type: string
      loginType:
        enum:
        - 0
        - 1
        example: 0
        type: integer
      password:
        example: "123456"
        maxLength: 20
        minLength: 6
        type: string
      phone:
        example: "13800138000"
        type: string
    required:
    - loginType
    - password
    type: object
  response.Meta:
    properties:
      extra:
        additionalProperties:
          type: string
        type: object
      page:
        example: 1
        minimum: 1
        type: integer
      pageSize:
        example: 10
        minimum: 1
        type: integer
      total:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      meta:
        $ref: '#/definitions/response.Meta'
      reason:
        type: string
    type: object
info:
  contact:
    email: yusankurban@gmail.com
    name: Yusank
    url: https://yusank.space
  description: GoIM.Gateway 服务器接口文档
  license:
    name: MIT
    url: https://github.com/go-goim/core/blob/main/LICENSE
  termsOfService: http://go-goim.github.io/
  title: GoIM.Gateway Swagger
  version: "1.0"
paths:
  /discovery/discover:
    get:
      description: 获取推送服务器 IP
      parameters:
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: errCode
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: unauthorized
          schema:
            type: "null"
      summary: 获取推送服务器
      tags:
      - discover
  /group/create:
    post:
      consumes:
      - application/json
      description: 创建群组
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 创建群组请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 创建群组
      tags:
      - 群组
  /group/delete:
    post:
      consumes:
      - application/json
      description: 删除群组
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 删除群组请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 删除群组
      tags:
      - 群组
  /group/get:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取群组信息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 群组ID
        in: query
        name: gid
        required: true
        type: string
      - description: 是否获取群组成员
        in: query
        name: with_members
        type: boolean
      - description: 是否获取群组信息
        in: query
        name: with_info
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取群组信息
      tags:
      - 群组
  /group/list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取群组列表
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Group'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取群组列表
      tags:
      - 群组
  /group/member/invite:
    post:
      consumes:
      - application/json
      description: 任何群成员都可以添加群组成员
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 加入群组请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ChangeGroupMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ChangeGroupMemberResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 添加群组成员
      tags:
      - 群组
  /group/member/leave:
    post:
      consumes:
      - application/json
      description: 群组成员可以退出群组
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 退出群组请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ChangeGroupMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 退出群组
      tags:
      - 群组
  /group/member/remove:
    post:
      consumes:
      - application/json
      description: 群管理员可以删除群组成员
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 删除群组成员请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ChangeGroupMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ChangeGroupMemberResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 删除群组成员
      tags:
      - 群组
  /group/update:
    post:
      consumes:
      - application/json
      description: 更新群组
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新群组请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新群组
      tags:
      - 群组
  /message/broadcast:
    post:
      consumes:
      - application/json
      description: 发送广播消息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.SendMessageReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SendMessageResp'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 发送广播消息
      tags:
      - message
  /message/send_msg:
    post:
      consumes:
      - application/json
      description: 发送单聊消息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.SendMessageReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SendMessageResp'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 发送单聊消息
      tags:
      - message
  /offline_message/query:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 查询离线消息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: lastMessageId
        in: query
        name: lastMessageId
        required: true
        type: integer
      - description: onlyCount
        in: query
        name: onlyCount
        type: boolean
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Message'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 查询离线消息
      tags:
      - offline_message
  /user/friend/accept:
    post:
      consumes:
      - application/json
      description: 接受好友请求
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ConfirmFriendRequestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 接受好友请求
      tags:
      - 好友
  /user/friend/add:
    post:
      consumes:
      - application/json
      description: 添加好友
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.BaseFriendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.FriendRequest'
                  type: array
              type: object
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 添加好友
      tags:
      - 好友
  /user/friend/block:
    post:
      consumes:
      - application/json
      description: 屏蔽好友
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.BaseFriendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 屏蔽好友
      tags:
      - 好友
  /user/friend/delete:
    post:
      consumes:
      - application/json
      description: 删除好友
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.BaseFriendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 删除好友
      tags:
      - 好友
  /user/friend/list:
    get:
      description: 获取好友列表
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Friend'
                  type: array
              type: object
        "400":
          description: err
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取好友列表
      tags:
      - 好友
  /user/friend/reject:
    post:
      consumes:
      - application/json
      description: 拒绝好友请求
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ConfirmFriendRequestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 拒绝好友请求
      tags:
      - 好友
  /user/friend/request/list:
    get:
      description: 获取好友请求列表
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      - description: status
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.FriendRequest'
                  type: array
              type: object
        "400":
          description: err
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取好友请求列表
      tags:
      - 好友
  /user/friend/unblock:
    post:
      consumes:
      - application/json
      description: 取消屏蔽好友
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.BaseFriendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 取消屏蔽好友
      tags:
      - 好友
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.User'
              type: object
      summary: 登录
      tags:
      - 用户
  /user/query:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 查询用户信息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: email
        in: query
        name: email
        type: string
      - description: phone
        in: query
        name: Phone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 查询用户信息
      tags:
      - 用户
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 注册
      tags:
      - 用户
  /user/update:
    post:
      consumes:
      - application/json
      description: 更新用户信息
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新用户信息
      tags:
      - 用户
swagger: "2.0"
